{"ast":null,"code":"import axios from\"axios\";var userRegion=localStorage.getItem(\"userRegion\");if(userRegion){userRegion=userRegion.replace(/ /g,\"_\");}var FETCH_REPORT_TYPES_OF_PLAYER=\"/api/v1/players/reportsType?username=\";var FETCH_ALL_REPORTS_TYPE=\"/api/v1/reportTypeRegion/all?region=\";var fetchReportsTypeByPlayerNickname=function fetchReportsTypeByPlayerNickname(nickname){return axios.get(FETCH_REPORT_TYPES_OF_PLAYER+nickname+'&region='+userRegion).then(function(response){return response.data;}).catch(function(error){console.log(error);});};var fetchAllReportsType=function fetchAllReportsType(){return axios.get(FETCH_ALL_REPORTS_TYPE+userRegion).then(function(response){return response.data;}).catch(function(error){console.log(error);});};export default{fetchReportsTypeByPlayerNickname:fetchReportsTypeByPlayerNickname,fetchAllReportsType:fetchAllReportsType};","map":{"version":3,"sources":["C:/Users/kartu/Desktop/ReportPlayer/frontend/src/service/reportType.service.js"],"names":["axios","userRegion","localStorage","getItem","replace","FETCH_REPORT_TYPES_OF_PLAYER","FETCH_ALL_REPORTS_TYPE","fetchReportsTypeByPlayerNickname","nickname","get","then","response","data","catch","error","console","log","fetchAllReportsType"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAIC,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB,CACA,GAAGF,UAAH,CAAe,CACXA,UAAU,CAAGA,UAAU,CAACG,OAAX,CAAmB,IAAnB,CAAwB,GAAxB,CAAb,CAEH,CAED,GAAMC,CAAAA,4BAA4B,CAAG,uCAArC,CACA,GAAMC,CAAAA,sBAAsB,CAAG,sCAA/B,CAEA,GAAMC,CAAAA,gCAAgC,CAAG,QAAnCA,CAAAA,gCAAmC,CAACC,QAAD,CAAc,CACnD,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAUJ,4BAA4B,CAACG,QAA7B,CAAsC,UAAtC,CAAiDP,UAA3D,EAAuES,IAAvE,CACH,SAACC,QAAD,CAAc,CACV,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACH,CAHE,EAIFC,KAJE,CAII,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CANE,CAAP,CAOH,CARD,CAUA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,MAAOjB,CAAAA,KAAK,CAACS,GAAN,CAAUH,sBAAsB,CAACL,UAAjC,EAA6CS,IAA7C,CACH,SAACC,QAAD,CAAc,CACV,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACH,CAHE,EAIFC,KAJE,CAII,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CANE,CAAP,CAOH,CARD,CASA,cAAe,CACXP,gCAAgC,CAAhCA,gCADW,CAEXU,mBAAmB,CAAnBA,mBAFW,CAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nlet userRegion = localStorage.getItem(\"userRegion\");\r\nif(userRegion) {\r\n    userRegion = userRegion.replace(/ /g,\"_\"); \r\n\r\n}\r\n\r\nconst FETCH_REPORT_TYPES_OF_PLAYER = \"/api/v1/players/reportsType?username=\";\r\nconst FETCH_ALL_REPORTS_TYPE = \"/api/v1/reportTypeRegion/all?region=\";\r\n\r\nconst fetchReportsTypeByPlayerNickname = (nickname) => {\r\n    return axios.get(FETCH_REPORT_TYPES_OF_PLAYER+nickname+'&region='+userRegion).then(\r\n        (response) => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n};\r\n\r\nconst fetchAllReportsType = () => {\r\n    return axios.get(FETCH_ALL_REPORTS_TYPE+userRegion).then(\r\n        (response) => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });        \r\n};\r\nexport default {\r\n    fetchReportsTypeByPlayerNickname,\r\n    fetchAllReportsType,\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}