{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\component\\\\PieChartReportsTypeOfPlayer\\\\PieChartReportsTypeOfPlayer.js\";\nimport { Chart } from \"react-google-charts\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './PieChartReportsTypeOfPlayer.scss';\nimport ReportTypeService from '../../service/reportType.service';\n\nconst PieChartReportsTypeOfPlayer = props => {\n  const username = props.username;\n  const [reportsType, setReportType] = useState([]);\n  useEffect(() => {\n    ReportTypeService.fetchReportsTypeByPlayerNickname(username).then(response => {\n      setReportType(response);\n    });\n  }, []);\n  const data = [['Task', 'Hours per Day']];\n  reportsType.map(repType => {\n    return data.push([repType.reportType, repType.count]);\n  });\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pie-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '100%',\n    height: '400px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      alignment: \"center\",\n      legend: {\n        position: 'left',\n        alignment: 'center',\n        orientation: 'vertical'\n      },\n      chartArea: {\n        left: 0,\n        top: 0,\n        width: \"100%\",\n        height: \"80%\"\n      },\n      // Just add this option\n      pieHole: 0.7,\n      backgroundColor: 'transparent',\n      colors: ['#40ff00', '#ff0000', '#ffffff', '#FFA500', '#FFA500']\n    },\n    rootProps: {\n      'data-testid': '3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PieChartReportsTypeOfPlayer;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/component/PieChartReportsTypeOfPlayer/PieChartReportsTypeOfPlayer.js"],"names":["Chart","React","useEffect","useState","useDispatch","useSelector","ReportTypeService","PieChartReportsTypeOfPlayer","props","username","reportsType","setReportType","fetchReportsTypeByPlayerNickname","then","response","data","map","repType","push","reportType","count","console","log","alignment","legend","position","orientation","chartArea","left","top","width","height","pieHole","backgroundColor","colors"],"mappings":";AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,oCAAP;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,MAAMC,2BAA2B,GAAIC,KAAD,IAAW;AAE3C,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AAEA,QAAM,CAACC,WAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAIAD,EAAAA,SAAS,CAAE,MAAK;AACZI,IAAAA,iBAAiB,CAACM,gCAAlB,CAAmDH,QAAnD,EAA6DI,IAA7D,CACKC,QAAD,IAAc;AACVH,MAAAA,aAAa,CAACG,QAAD,CAAb;AACH,KAHL;AAKH,GANQ,EAMP,EANO,CAAT;AAQA,QAAMC,IAAI,GAAG,CAAC,CAAC,MAAD,EAAS,eAAT,CAAD,CAAb;AAEAL,EAAAA,WAAW,CAACM,GAAZ,CAAgBC,OAAO,IAAI;AAC7B,WAAOF,IAAI,CAACG,IAAL,CAAU,CAACD,OAAO,CAACE,UAAT,EAAoBF,OAAO,CAACG,KAA5B,CAAV,CAAP;AAEG,GAHD;AAKDC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEC,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE,MADX;AAEI,IAAA,MAAM,EAAE,OAFZ;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJZ;AAKI,IAAA,IAAI,EACAA,IANR;AAQI,IAAA,OAAO,EAAE;AACLQ,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,MADN;AAEJF,QAAAA,SAAS,EAAE,QAFP;AAGJG,QAAAA,WAAW,EAAE;AAHT,OAFH;AAOPC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,CADG;AAETC,QAAAA,GAAG,EAAE,CAFI;AAGTC,QAAAA,KAAK,EAAE,MAHE;AAITC,QAAAA,MAAM,EAAE;AAJC,OAPJ;AAaL;AACAC,MAAAA,OAAO,EAAE,GAdJ;AAeLC,MAAAA,eAAe,EAAE,aAfZ;AAgBLC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C;AAhBH,KARb;AA2BI,IAAA,SAAS,EAAE;AAAE,qBAAe;AAAjB,KA3Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAiCH,CA1DD;;AA4DA,eAAe3B,2BAAf","sourcesContent":["import { Chart } from \"react-google-charts\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './PieChartReportsTypeOfPlayer.scss';\r\nimport ReportTypeService from '../../service/reportType.service';\r\n\r\nconst PieChartReportsTypeOfPlayer = (props) => {\r\n\r\n    const username = props.username;\r\n\r\n    const [reportsType,setReportType] = useState([])\r\n\r\n\r\n\r\n    useEffect( ()=> {\r\n        ReportTypeService.fetchReportsTypeByPlayerNickname(username).then(\r\n            (response) => {\r\n                setReportType(response)\r\n            });\r\n           \r\n    },[])\r\n\r\n    const data = [['Task', 'Hours per Day']]\r\n\r\n    reportsType.map(repType => {\r\n\t\treturn data.push([repType.reportType,repType.count])\r\n\t\t\r\n    });\r\n    \r\n   console.log(data)\r\n\r\n    return (\r\n        <div className=\"pie-chart\">\r\n        <Chart\r\n            width={'100%'}\r\n            height={'400px'}\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={\r\n                data\r\n            }\r\n            options={{\r\n                alignment: \"center\",\r\n                legend: { \r\n                    position: 'left', \r\n                    alignment: 'center' ,\r\n                    orientation: 'vertical',\r\n              },\r\n              chartArea: {\r\n                left: 0,\r\n                top: 0,\r\n                width: \"100%\",\r\n                height: \"80%\"\r\n              },\r\n                // Just add this option\r\n                pieHole: 0.7,\r\n                backgroundColor: 'transparent',\r\n                colors: ['#40ff00', '#ff0000', '#ffffff', '#FFA500', '#FFA500']\r\n            }}\r\n\r\n            rootProps={{ 'data-testid': '3' }}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChartReportsTypeOfPlayer;"]},"metadata":{},"sourceType":"module"}