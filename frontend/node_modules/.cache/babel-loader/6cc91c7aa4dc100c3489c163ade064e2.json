{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\component\\\\PieChartReportsTypeOfPlayer\\\\PieChartReportsTypeOfPlayer.js\";\nimport { Chart } from \"react-google-charts\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './PieChartReportsTypeOfPlayer.scss';\nimport { fetchReportsTypeByPlayerNickname } from '../../redux/reportType/actions';\n\nconst PieChartReportsTypeOfPlayer = props => {\n  const dispatch = useDispatch();\n  const reportsType = useSelector(state => state.reportType.reportsTypeOfPlayer);\n  const username = props.username;\n  useEffect(() => {\n    dispatch(fetchReportsTypeByPlayerNickname(username));\n  }, [dispatch, username]);\n  const data = [['Task', 'Hours per Day']];\n  reportsType.map(repType => {\n    return data.push([repType.reportType, repType.count]);\n  });\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pie-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    width: '700px',\n    height: '700px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      alignment: \"center\",\n      legend: {\n        position: 'rigth',\n        alignment: 'center',\n        orientation: 'vertical',\n        chartArea: {\n          width: '100000%',\n          height: '100000%'\n        }\n      },\n      // Just add this option\n      pieHole: 0.7,\n      backgroundColor: 'transparent',\n      colors: ['#40ff00', '#ff0000', '#ffffff', '#FFA500', '#FFA500']\n    },\n    rootProps: {\n      'data-testid': '3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PieChartReportsTypeOfPlayer;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/component/PieChartReportsTypeOfPlayer/PieChartReportsTypeOfPlayer.js"],"names":["Chart","React","useEffect","useDispatch","useSelector","fetchReportsTypeByPlayerNickname","PieChartReportsTypeOfPlayer","props","dispatch","reportsType","state","reportType","reportsTypeOfPlayer","username","data","map","repType","push","count","console","log","alignment","legend","position","orientation","chartArea","width","height","pieHole","backgroundColor","colors"],"mappings":";AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,oCAAP;AACA,SAAQC,gCAAR,QAA+C,gCAA/C;;AAGA,MAAMC,2BAA2B,GAAIC,KAAD,IAAW;AAE3C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,mBAA3B,CAA/B;AACA,QAAMC,QAAQ,GAAGN,KAAK,CAACM,QAAvB;AAEAX,EAAAA,SAAS,CAAE,MAAK;AACZM,IAAAA,QAAQ,CAACH,gCAAgC,CAACQ,QAAD,CAAjC,CAAR;AACH,GAFQ,EAEP,CAACL,QAAD,EAAUK,QAAV,CAFO,CAAT;AAIA,QAAMC,IAAI,GAAG,CAAC,CAAC,MAAD,EAAS,eAAT,CAAD,CAAb;AAGAL,EAAAA,WAAW,CAACM,GAAZ,CAAgBC,OAAO,IAAI;AAC7B,WAAOF,IAAI,CAACG,IAAL,CAAU,CAACD,OAAO,CAACL,UAAT,EAAoBK,OAAO,CAACE,KAA5B,CAAV,CAAP;AAEA,GAHE;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE,OADX;AAEI,IAAA,MAAM,EAAE,OAFZ;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJZ;AAKI,IAAA,IAAI,EACAA,IANR;AAQI,IAAA,OAAO,EAAE;AACLO,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,OADN;AAEJF,QAAAA,SAAS,EAAE,QAFP;AAGJG,QAAAA,WAAW,EAAE,UAHT;AAIJC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,MAAM,EAAE;AAA5B;AAJP,OAFH;AASL;AACAC,MAAAA,OAAO,EAAE,GAVJ;AAWLC,MAAAA,eAAe,EAAE,aAXZ;AAYLC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C;AAZH,KARb;AAuBI,IAAA,SAAS,EAAE;AAAE,qBAAe;AAAjB,KAvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AA6BH,CAhDD;;AAkDA,eAAexB,2BAAf","sourcesContent":["import { Chart } from \"react-google-charts\";\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './PieChartReportsTypeOfPlayer.scss';\r\nimport {fetchReportsTypeByPlayerNickname} from '../../redux/reportType/actions';\r\n\r\n\r\nconst PieChartReportsTypeOfPlayer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const reportsType = useSelector(state => state.reportType.reportsTypeOfPlayer)\r\n    const username = props.username;\r\n\r\n    useEffect( ()=> {\r\n        dispatch(fetchReportsTypeByPlayerNickname(username))\r\n    },[dispatch,username])\r\n\r\n    const data = [['Task', 'Hours per Day']]\r\n\r\n\r\n    reportsType.map(repType => {\r\n\t\treturn data.push([repType.reportType,repType.count])\r\n\t\t\r\n\t});\r\n\r\n    console.log(data)\r\n    return (\r\n        <div className=\"pie-chart\">\r\n        <Chart\r\n            width={'700px'}\r\n            height={'700px'}\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={\r\n                data\r\n            }\r\n            options={{\r\n                alignment: \"center\",\r\n                legend: { \r\n                    position: 'rigth', \r\n                    alignment: 'center' ,\r\n                    orientation: 'vertical',\r\n                    chartArea: { width: '100000%', height: '100000%'},\r\n\r\n              },\r\n                // Just add this option\r\n                pieHole: 0.7,\r\n                backgroundColor: 'transparent',\r\n                colors: ['#40ff00', '#ff0000', '#ffffff', '#FFA500', '#FFA500']\r\n            }}\r\n\r\n            rootProps={{ 'data-testid': '3' }}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChartReportsTypeOfPlayer;"]},"metadata":{},"sourceType":"module"}