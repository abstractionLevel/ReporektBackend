{"ast":null,"code":"import React,{useState}from'react';import{useForm}from'react-hook-form';import{Col,Container,Row}from'react-bootstrap';import ReportService from'../../service/report.service';import{reportsType}from'../../utility/reportsTypeConstant';var ReporterPage=function ReporterPage(props){var _useForm=useForm({}),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;var onSubmit=function onSubmit(data){ReportService.doReport(data.nickname,data.reportType,data.description).then(function(response){if(response.status===200){props.history.push(encodeURI(\"/player/\"+data.nickname));}else{console.log(\"error\");}});};return/*#__PURE__*/React.createElement(Container,{flui:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{className:\"col-lg-4 form-login\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"input\",{name:\"nickname\",placeholder:\"nickname\",className:\"form-control mb-2\",type:\"text\",ref:register({pattern:{value:/^[a-zA-Z0-9_]+$/,message:\"No Special Characters\"},required:\"You must specify an nickname\"})}),errors.nickname&&/*#__PURE__*/React.createElement(\"p\",null,errors.nickname.message),/*#__PURE__*/React.createElement(\"select\",{name:\"reportType\",className:\"form-control mb-2\",ref:register({required:\"select one option\"})},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select a Report Type\"),reportsType.map(function(repType,index){return/*#__PURE__*/React.createElement(\"option\",{value:repType},repType);})),errors.reportType&&/*#__PURE__*/React.createElement(\"p\",null,errors.reportType.message),/*#__PURE__*/React.createElement(\"textarea\",{name:\"description\",className:\"form-control mb-2\",ref:register({required:\"write an description's report\",minLength:{value:10,message:\"min 10 letter\"},maxLength:{value:2000,message:\"max 2000\"}})}),errors.description&&/*#__PURE__*/React.createElement(\"p\",null,errors.description.message),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"form-control \"})))));};export default ReporterPage;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/ReportPlayer/src/main/reactjs/src/pages/Report/ReporterPage.js"],"names":["React","useState","useForm","Col","Container","Row","ReportService","reportsType","ReporterPage","props","register","errors","handleSubmit","onSubmit","data","doReport","nickname","reportType","description","then","response","status","history","push","encodeURI","console","log","pattern","value","message","required","map","repType","index","minLength","maxLength"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,GAAT,CAAcC,SAAd,CAAyBC,GAAzB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA,OAAQC,WAAR,KAA0B,mCAA1B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,cAEeP,OAAO,CAAC,EAAD,CAFtB,CAEpBQ,QAFoB,UAEpBA,QAFoB,CAEVC,MAFU,UAEVA,MAFU,CAEFC,YAFE,UAEFA,YAFE,CAM5B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,IAAI,CAAI,CACrBR,aAAa,CAACS,QAAd,CAAuBD,IAAI,CAACE,QAA5B,CAAqCF,IAAI,CAACG,UAA1C,CAAqDH,IAAI,CAACI,WAA1D,EAAuEC,IAAvE,CACI,SAACC,QAAD,CAAc,CACV,GAAGA,QAAQ,CAACC,MAAT,GAAkB,GAArB,CAA0B,CAEtBZ,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBC,SAAS,CAAC,WAAWV,IAAI,CAACE,QAAjB,CAA5B,EACH,CAHD,IAIK,CACDS,OAAO,CAACC,GAAR,CAAY,OAAZ,EACH,CACJ,CATL,EAYH,CAbD,CAgBA,mBACI,oBAAC,SAAD,EAAW,IAAI,KAAf,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,qBAAf,eACI,4BAAM,QAAQ,CAAEd,YAAY,CAACC,QAAD,CAA5B,eACI,6BACI,IAAI,CAAC,UADT,CAEI,WAAW,CAAC,UAFhB,CAGI,SAAS,CAAC,mBAHd,CAII,IAAI,CAAC,MAJT,CAKI,GAAG,CAAEH,QAAQ,CAAC,CACViB,OAAO,CAAE,CACLC,KAAK,CAAG,iBADH,CAELC,OAAO,CAAE,uBAFJ,CADC,CAKVC,QAAQ,CAAE,8BALA,CAAD,CALjB,EADJ,CAcKnB,MAAM,CAACK,QAAP,eAAmB,6BAAIL,MAAM,CAACK,QAAP,CAAgBa,OAApB,CAdxB,cAgBI,8BAAQ,IAAI,CAAC,YAAb,CACI,SAAS,CAAC,mBADd,CAEI,GAAG,CAAEnB,QAAQ,CAAC,CACVoB,QAAQ,CAAE,mBADA,CAAD,CAFjB,eAKI,8BAAQ,KAAK,CAAC,EAAd,yBALJ,CAMKvB,WAAW,CAACwB,GAAZ,CAAgB,SAACC,OAAD,CAAUC,KAAV,qBACb,8BAAQ,KAAK,CAAED,OAAf,EAAyBA,OAAzB,CADa,EAAhB,CANL,CAhBJ,CA2BKrB,MAAM,CAACM,UAAP,eAAqB,6BAAIN,MAAM,CAACM,UAAP,CAAkBY,OAAtB,CA3B1B,cA6BI,gCACI,IAAI,CAAC,aADT,CAEI,SAAS,CAAC,mBAFd,CAGI,GAAG,CAAEnB,QAAQ,CAAC,CACVoB,QAAQ,CAAE,+BADA,CAEVI,SAAS,CAAE,CACPN,KAAK,CAAE,EADA,CAEPC,OAAO,CAAE,eAFF,CAFD,CAMVM,SAAS,CAAE,CACPP,KAAK,CAAE,IADA,CAEPC,OAAO,CAAE,UAFF,CAND,CAAD,CAHjB,EA7BJ,CA4CKlB,MAAM,CAACO,WAAP,eAAsB,6BAAIP,MAAM,CAACO,WAAP,CAAmBW,OAAvB,CA5C3B,cA8CI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAC,eAA/B,EA9CJ,CADJ,CADJ,CADJ,CADJ,CAwDH,CA9ED,CAgFA,cAAerB,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ReportService from '../../service/report.service';\r\nimport {reportsType} from '../../utility/reportsTypeConstant';\r\n\r\nconst ReporterPage = (props) => {\r\n\r\n    const { register, errors, handleSubmit } = useForm({});\r\n\r\n\r\n\r\n    const onSubmit = data => {\r\n        ReportService.doReport(data.nickname,data.reportType,data.description).then(\r\n            (response) => {\r\n                if(response.status===200) {\r\n                    \r\n                    props.history.push(encodeURI(\"/player/\"+data.nickname));\r\n                }\r\n                else {\r\n                    console.log(\"error\")\r\n                }\r\n            }\r\n        );\r\n       \r\n    };\r\n\r\n\r\n    return (\r\n        <Container flui>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"col-lg-4 form-login\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input\r\n                            name=\"nickname\"\r\n                            placeholder=\"nickname\"\r\n                            className=\"form-control mb-2\"\r\n                            type=\"text\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value:  /^[a-zA-Z0-9_]+$/,\r\n                                    message: \"No Special Characters\"\r\n                                },\r\n                                required: \"You must specify an nickname\"\r\n                            })}\r\n                        />\r\n                        {errors.nickname && <p>{errors.nickname.message}</p>}\r\n\r\n                        <select name=\"reportType\"\r\n                            className=\"form-control mb-2\"\r\n                            ref={register({\r\n                                required: \"select one option\"\r\n                            })}>\r\n                            <option value=\"\">Select a Report Type</option>\r\n                            {reportsType.map((repType, index) =>\r\n                                <option value={repType}>{repType}</option>\r\n                            )}\r\n                        </select>\r\n\r\n                        {errors.reportType && <p>{errors.reportType.message}</p>}\r\n\r\n                        <textarea\r\n                            name=\"description\"\r\n                            className=\"form-control mb-2\"\r\n                            ref={register({\r\n                                required: \"write an description's report\",\r\n                                minLength: {\r\n                                    value: 10,\r\n                                    message: \"min 10 letter\"\r\n                                },\r\n                                maxLength: {\r\n                                    value: 2000,\r\n                                    message: \"max 2000\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.description && <p>{errors.description.message}</p>}\r\n                        \r\n                        <input type=\"submit\" className=\"form-control \" />\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ReporterPage;"]},"metadata":{},"sourceType":"module"}