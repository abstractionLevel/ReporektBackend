{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\kartu\\\\Desktop\\\\ReportPlayer\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect,useReducer}from\"react\";import{useForm}from\"react-hook-form\";import{Col,Container,Row}from'react-bootstrap';//service\nimport AuthService from'../../service/auth.service';//scss\nimport'./RegisterPage.scss';var RegisterPage=function RegisterPage(props){var _useForm=useForm({}),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit,watch=_useForm.watch;var passwordWatched=useRef({});var submitRef=useRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),usernameAlreadyExist=_useState10[0],setUsernameAlreadyExist=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),emailAlreadyExists=_useState12[0],setEmailAlreadyExists=_useState12[1];passwordWatched.current=watch(\"password\",\"\");useEffect(function(){},[usernameAlreadyExist]);var onSubmit=function onSubmit(data){if(submitRef.current){submitRef.current.setAttribute(\"disabled\",\"disabled\");}AuthService.verifyUserExists(data.username).then(function(response){response.status===200?setUsernameAlreadyExist(true):setUsernameAlreadyExist(false);});AuthService.verifyEmailExists(data.email).then(function(response){response.status===200?setEmailAlreadyExists(true):setEmailAlreadyExists(false);});setUsername(data.username);setPassword(data.password);setEmail(data.email);setConfirmPassword(data.confirmPassword);};if(usernameAlreadyExist===false&&emailAlreadyExists===false){AuthService.register(username,email,password,confirmPassword).then(function(response){props.history.push({pathname:'/message',state:{successful:true,message:\"A verification link has been sent your email: \"+email}});},function(error){console.log(error);var resMessage=error.response&&error.response.data&&error.response.data.message||error.message||error.toString();props.history.push({pathname:'/message',state:{successful:false,message:resMessage}});});}return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{className:\"col-lg-4 form-login\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Sign Up\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"input\",{name:\"username\",className:\"form-control mb-2 \",type:\"text\",placeholder:\"username\",ref:register({required:\"You must specify a username\",minLength:{value:8,message:\"username must have at least 6 characters\"},pattern:{value:/^[a-zA-Z0-9_]+$/,message:\"No Speacial Characters\"}})}),errors.username&&/*#__PURE__*/React.createElement(\"p\",null,errors.username.message),usernameAlreadyExist&&/*#__PURE__*/React.createElement(\"p\",null,\"Username Already Exists\"),/*#__PURE__*/React.createElement(\"input\",{name:\"email\",className:\"form-control mb-2 \",type:\"text\",placeholder:\"email\",ref:register({required:\"required\",pattern:{value:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,message:\"invalid email address\"}})}),errors.email&&/*#__PURE__*/React.createElement(\"p\",null,errors.email.message),emailAlreadyExists&&/*#__PURE__*/React.createElement(\"p\",null,\"email Already exists\"),/*#__PURE__*/React.createElement(\"input\",{name:\"password\",className:\"form-control mb-2 \",type:\"text\",placeholder:\"password\",ref:register({required:\"You must specify a password\",minLength:{value:8,message:\"Password must have at least 8 characters\"}})}),errors.password&&/*#__PURE__*/React.createElement(\"p\",null,errors.password.message),/*#__PURE__*/React.createElement(\"input\",{name:\"confirmPassword\",className:\"form-control mb-2\",placeholder:\"confirm password\",type:\"text\",ref:register({validate:function validate(value){return value===passwordWatched.current||\"The passwords do not match\";}})}),errors.confirmPassword&&/*#__PURE__*/React.createElement(\"p\",null,errors.confirmPassword.message),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"form-control \",ref:submitRef})))));};export default RegisterPage;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/ReportPlayer/frontend/src/pages/Register/RegisterPage.js"],"names":["React","useState","useRef","useEffect","useReducer","useForm","Col","Container","Row","AuthService","RegisterPage","props","register","errors","handleSubmit","watch","passwordWatched","submitRef","username","setUsername","password","setPassword","email","setEmail","confirmPassword","setConfirmPassword","usernameAlreadyExist","setUsernameAlreadyExist","emailAlreadyExists","setEmailAlreadyExists","current","onSubmit","data","setAttribute","verifyUserExists","then","response","status","verifyEmailExists","history","push","pathname","state","successful","message","error","console","log","resMessage","toString","required","minLength","value","pattern","validate"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useReducer } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n//service\r\nimport AuthService from '../../service/auth.service';\r\n\r\n//scss\r\nimport './RegisterPage.scss';\r\n\r\n\r\nconst RegisterPage = (props) => {\r\n\r\n\r\n    const { register, errors, handleSubmit, watch } = useForm({});\r\n\r\n    const passwordWatched = useRef({});\r\n    const submitRef = useRef();\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [usernameAlreadyExist, setUsernameAlreadyExist] = useState();\r\n    const [emailAlreadyExists, setEmailAlreadyExists] = useState();\r\n\r\n    passwordWatched.current = watch(\"password\", \"\")\r\n\r\n    useEffect(() => {\r\n    }, [usernameAlreadyExist])\r\n\r\n\r\n\r\n    const onSubmit = data => {\r\n        if(submitRef.current) {\r\n            submitRef.current.setAttribute(\"disabled\", \"disabled\");\r\n        }\r\n        AuthService.verifyUserExists(data.username).then(\r\n            (response) => {\r\n                response.status === 200 ? setUsernameAlreadyExist(true) : setUsernameAlreadyExist(false)\r\n            }\r\n        );\r\n\r\n        AuthService.verifyEmailExists(data.email).then(\r\n            (response) => {\r\n                response.status === 200 ? setEmailAlreadyExists(true) : setEmailAlreadyExists(false)\r\n            }\r\n        );\r\n\r\n        setUsername(data.username)\r\n        setPassword(data.password)\r\n        setEmail(data.email)\r\n        setConfirmPassword(data.confirmPassword)\r\n\r\n    };\r\n    if (usernameAlreadyExist === false && emailAlreadyExists === false) {\r\n        AuthService.register(username, email, password, confirmPassword).then(\r\n            (response) => {\r\n                props.history.push({\r\n                    pathname: '/message',\r\n                    state: {\r\n                        successful: true,\r\n                        message: \"A verification link has been sent your email: \" + email\r\n                    }\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                props.history.push({\r\n                    pathname: '/message',\r\n                    state: {\r\n                        successful: false,\r\n                        message: resMessage\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"col-lg-4 form-login\">\r\n                    <h5>Sign Up</h5>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input\r\n                            name=\"username\"\r\n                            className=\"form-control mb-2 \"\r\n                            type=\"text\"\r\n                            placeholder=\"username\"\r\n                            ref={register({\r\n                                required: \"You must specify a username\",\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"username must have at least 6 characters\"\r\n                                },\r\n                                 pattern: {\r\n                                    value:  /^[a-zA-Z0-9_]+$/,\r\n                                    message: \"No Speacial Characters\"\r\n                                },\r\n                                \r\n                            })}\r\n                        />\r\n                        {errors.username && <p>{errors.username.message}</p>}\r\n                        {usernameAlreadyExist && <p>Username Already Exists</p>}\r\n\r\n                        <input\r\n                            name=\"email\"\r\n                            className=\"form-control mb-2 \"\r\n                            type=\"text\"\r\n                            placeholder=\"email\"\r\n                            ref={register({\r\n                                required: \"required\",\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"invalid email address\"\r\n                                }\r\n                            })}\r\n                        />\r\n\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                        {emailAlreadyExists && <p>email Already exists</p>}\r\n\r\n                        <input\r\n                            name=\"password\"\r\n                            className=\"form-control mb-2 \"\r\n                            type=\"text\"\r\n                            placeholder=\"password\"\r\n                            ref={register({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"Password must have at least 8 characters\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n\r\n                        <input\r\n                            name=\"confirmPassword\"\r\n                            className=\"form-control mb-2\"\r\n                            placeholder=\"confirm password\"\r\n                            type=\"text\"\r\n                            ref={register({\r\n                                validate: value =>\r\n                                    value === passwordWatched.current || \"The passwords do not match\"\r\n                            })}\r\n                        />\r\n                        {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n\r\n                        <input type=\"submit\" className=\"form-control \" ref={submitRef}/>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n};\r\n\r\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}