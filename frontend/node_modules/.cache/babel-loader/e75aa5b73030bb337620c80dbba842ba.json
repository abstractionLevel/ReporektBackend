{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\component\\\\updatePassword\\\\UpdatePassword.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport AuthService from '../../service/auth.service';\nimport './UpdatePassword.scss';\nimport { useHistory } from \"react-router\";\n\nconst UpdatePassword = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch\n  } = useForm({});\n  const passwordWatched = useRef({});\n  const [response, setResponse] = useState();\n  const [message, setMessage] = useState(\"\");\n  passwordWatched.current = watch(\"password\", \"\");\n  const passwordNotFound = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }\n  }, \"Password Not Found\");\n  let history = useHistory();\n\n  const onSubmit = data => {\n    AuthService.updatePassword(data.oldPassword, data.password, data.confirmPassword).then(response => {\n      setResponse(response);\n    });\n  };\n\n  useEffect(() => {\n    if (response === 200) {\n      setMessage(\"Password Update\");\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    }\n\n    if (response === 204) {\n      setMessage(\"Password Don't Match\");\n    }\n  }, [response]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Update Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, message, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"oldPassword\",\n    className: \"form-control mb-2\",\n    type: \"text\",\n    placeholder: \"actual password\",\n    ref: register({\n      required: \"You must type an actual  password\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), errors.oldPassword && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 40\n    }\n  }, errors.oldPassword.message), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    className: \"form-control mb-2\",\n    type: \"text\",\n    placeholder: \"new password\",\n    ref: register({\n      required: \"You must type a new  password\",\n      minLength: {\n        value: 8,\n        message: \"Password must have at least 8 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"confirmPassword\",\n    className: \"form-control mb-2\",\n    type: \"text\",\n    placeholder: \"confirm password\",\n    ref: register({\n      validate: value => value === passwordWatched.current || \"The passwords do not match\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 44\n    }\n  }, errors.confirmPassword.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"form-control mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), response === 200 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 34\n    }\n  }, message), response === 204 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 34\n    }\n  }, message));\n};\n\nexport default UpdatePassword;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/component/updatePassword/UpdatePassword.js"],"names":["React","useState","useRef","useEffect","useForm","AuthService","useHistory","UpdatePassword","register","errors","handleSubmit","watch","passwordWatched","response","setResponse","message","setMessage","current","passwordNotFound","history","onSubmit","data","updatePassword","oldPassword","password","confirmPassword","then","setTimeout","window","location","reload","required","minLength","value","validate"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport AuthService from '../../service/auth.service';\r\nimport './UpdatePassword.scss';\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nconst UpdatePassword = () => {\r\n\r\n    const { register, errors, handleSubmit, watch } = useForm({});\r\n\r\n    const passwordWatched = useRef({});\r\n\r\n    const [response, setResponse] = useState();\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    passwordWatched.current = watch(\"password\", \"\")\r\n    const passwordNotFound = <p>Password Not Found</p>\r\n\r\n    let history = useHistory()\r\n\r\n    const onSubmit = data => {\r\n        AuthService.updatePassword(data.oldPassword, data.password, data.confirmPassword).then(\r\n            (response) => {\r\n                setResponse(response)\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (response === 200) {\r\n            setMessage(\"Password Update\")\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1000);\r\n\r\n        }\r\n        if (response === 204) {\r\n            setMessage(\"Password Don't Match\")\r\n        }\r\n    }, [response])\r\n\r\n    return (\r\n        <div>\r\n            <h5>Update Password</h5>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {message}\r\n                <input\r\n                    name=\"oldPassword\"\r\n                    className=\"form-control mb-2\"\r\n                    type=\"text\"\r\n                    placeholder=\"actual password\"\r\n                    ref={register({\r\n                        required: \"You must type an actual  password\"\r\n                    })}\r\n                />\r\n                {errors.oldPassword && <p>{errors.oldPassword.message}</p>}\r\n                <input\r\n                    name=\"password\"\r\n                    className=\"form-control mb-2\"\r\n                    type=\"text\"\r\n                    placeholder=\"new password\"\r\n                    ref={register({\r\n                        required: \"You must type a new  password\",\r\n                        minLength: {\r\n                            value: 8,\r\n                            message: \"Password must have at least 8 characters\"\r\n                        }\r\n                    })}\r\n                />\r\n                {errors.password && <p>{errors.password.message}</p>}\r\n                <input\r\n                    name=\"confirmPassword\"\r\n                    className=\"form-control mb-2\"\r\n                    type=\"text\"\r\n                    placeholder=\"confirm password\"\r\n                    ref={register({\r\n                        validate: value =>\r\n                            value === passwordWatched.current || \"The passwords do not match\"\r\n                    })}\r\n                />\r\n                {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n                <input type=\"submit\" className=\"form-control mb-1\" />\r\n\r\n            </form>\r\n            {response === 200 && <div className=\"alert alert-success\">{message}</div>}\r\n            {response === 204 && <div className=\"alert alert-danger\">{message}</div>}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default UpdatePassword"]},"metadata":{},"sourceType":"module"}