{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\pages\\\\Report\\\\ReporterPage.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport ReportService from '../../service/report.service';\nimport { reportsType } from '../../utility/reportsTypeConstant';\n\nconst ReporterPage = props => {\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm({});\n  const regex = '[%]';\n\n  const onSubmit = data => {};\n\n  return /*#__PURE__*/React.createElement(Container, {\n    flui: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg-4 form-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nickname\",\n    placeholder: \"nickname\",\n    className: \"form-control mb-2\",\n    type: \"text\",\n    ref: register({\n      pattern: {\n        value: regex,\n        message: \"special characters not allowed\"\n      },\n      required: \"You must specify an nickname\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }), errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 45\n    }\n  }, errors.nickname.message), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"reportType\",\n    className: \"form-control mb-2\",\n    ref: register({\n      required: \"select one option\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Select a Report Type\"), reportsType.map((repType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: repType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, repType))), errors.reportType && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 47\n    }\n  }, errors.reportType.message), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    className: \"form-control mb-2\",\n    ref: register({\n      required: \"write an description's report\",\n      minLength: {\n        value: 10,\n        message: \"min 10 letter\"\n      },\n      maxLength: {\n        value: 2000,\n        message: \"max 2000\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), errors.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 48\n    }\n  }, errors.description.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"form-control \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default ReporterPage;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/pages/Report/ReporterPage.js"],"names":["React","useState","useForm","Col","Container","Row","ReportService","reportsType","ReporterPage","props","register","errors","handleSubmit","regex","onSubmit","data","pattern","value","message","required","nickname","map","repType","index","reportType","minLength","maxLength","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ReportService from '../../service/report.service';\r\nimport {reportsType} from '../../utility/reportsTypeConstant';\r\n\r\nconst ReporterPage = (props) => {\r\n\r\n    const { register, errors, handleSubmit } = useForm({});\r\n\r\n    const  regex  = '[%]'\r\n\r\n    const onSubmit = data => {\r\n       \r\n       \r\n    };\r\n\r\n\r\n    return (\r\n        <Container flui>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"col-lg-4 form-login\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input\r\n                            name=\"nickname\"\r\n                            placeholder=\"nickname\"\r\n                            className=\"form-control mb-2\"\r\n                            type=\"text\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: regex,\r\n                                    message: \"special characters not allowed\"\r\n                                },\r\n                                required: \"You must specify an nickname\"\r\n                            })}\r\n                        />\r\n                        {errors.nickname && <p>{errors.nickname.message}</p>}\r\n\r\n                        <select name=\"reportType\"\r\n                            className=\"form-control mb-2\"\r\n                            ref={register({\r\n                                required: \"select one option\"\r\n                            })}>\r\n                            <option value=\"\">Select a Report Type</option>\r\n                            {reportsType.map((repType, index) =>\r\n                                <option value={repType}>{repType}</option>\r\n                            )}\r\n                        </select>\r\n\r\n                        {errors.reportType && <p>{errors.reportType.message}</p>}\r\n\r\n                        <textarea\r\n                            name=\"description\"\r\n                            className=\"form-control mb-2\"\r\n                            ref={register({\r\n                                required: \"write an description's report\",\r\n                                minLength: {\r\n                                    value: 10,\r\n                                    message: \"min 10 letter\"\r\n                                },\r\n                                maxLength: {\r\n                                    value: 2000,\r\n                                    message: \"max 2000\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.description && <p>{errors.description.message}</p>}\r\n                        \r\n                        <input type=\"submit\" className=\"form-control \" />\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ReporterPage;"]},"metadata":{},"sourceType":"module"}