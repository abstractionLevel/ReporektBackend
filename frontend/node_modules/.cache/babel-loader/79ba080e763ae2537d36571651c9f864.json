{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\component\\\\formForgotPassword\\\\FormForgotPassword.js\";\nimport React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst ForgotPassword = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch\n  } = useForm({});\n  const passwordWatched = useRef({});\n  passwordWatched.current = watch(\"password\", \"\");\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"password\",\n    placeholder: \"password\",\n    ref: register({\n      required: \"You must specify a password\",\n      minLength: {\n        value: 8,\n        message: \"Password must have at least 8 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    placeholder: \"confirmPassword\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: \"required\",\n      validate: value => value === passwordWatched.current || \"The password do not match\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }\n  }, errors.confirmPassword.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/component/formForgotPassword/FormForgotPassword.js"],"names":["React","useRef","useForm","Col","Container","Row","ForgotPassword","register","errors","handleSubmit","watch","passwordWatched","current","onSubmit","data","console","log","required","minLength","value","message","password","validate","confirmPassword"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAEzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAmCC,IAAAA;AAAnC,MAA4CR,OAAO,CAAC,EAAD,CAAzD;AAEA,QAAMS,eAAe,GAAGV,MAAM,CAAC,EAAD,CAA9B;AACAU,EAAAA,eAAe,CAACC,OAAhB,GAA0BF,KAAK,CAAC,UAAD,EAAa,EAAb,CAA/B;;AAEA,QAAMG,QAAQ,GAAGC,IAAI,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,GAAG,EAAEN,QAAQ,CAAC;AACVU,MAAAA,QAAQ,EAAE,6BADA;AAEVC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFD,KAAD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcKZ,MAAM,CAACa,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,MAAM,CAACa,QAAP,CAAgBD,OAApB,CAdxB,eAeI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,iBAJT;AAKI,IAAA,GAAG,EAAEb,QAAQ,CAAC;AACVU,MAAAA,QAAQ,EAAC,UADC;AAEVK,MAAAA,QAAQ,EAAEH,KAAK,IACXA,KAAK,KAAKR,eAAe,CAACC,OAA1B,IAAqC;AAH/B,KAAD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EA0BKJ,MAAM,CAACe,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIf,MAAM,CAACe,eAAP,CAAuBH,OAA3B,CA1B/B,eA2BI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CADJ;AAkCH,CA7CD;;AA+CA,eAAed,cAAf","sourcesContent":["import React, { useRef} from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const { register, errors, handleSubmit , watch} = useForm({});\r\n\r\n    const passwordWatched = useRef({});\r\n    passwordWatched.current = watch(\"password\", \"\")\r\n\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                ref={register({\r\n                    required: \"You must specify a password\",\r\n                    minLength: {\r\n                        value: 8,\r\n                        message: \"Password must have at least 8 characters\"\r\n                    }\r\n                })}\r\n            />\r\n            {errors.password && <p>{errors.password.message}</p>}\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                ref={register({\r\n                    required:\"required\",\r\n                    validate: value =>\r\n                        value === passwordWatched.current || \"The password do not match\"\r\n                })}\r\n            />\r\n            {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n            <input\r\n                type=\"submit\"\r\n                className=\"form-control\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}