{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\component\\\\formForgotPassword\\\\FormForgotPassword.js\";\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useParams } from \"react-router-dom\";\nimport AuthService from '../../service/auth.service';\n\nconst ForgotPassword = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch\n  } = useForm({});\n  const [response, setResponse] = useState();\n  const passwordWatched = useRef({});\n  passwordWatched.current = watch(\"password\", \"\");\n  const {\n    token\n  } = useParams();\n\n  const onSubmit = data => {\n    AuthService.forgotPassword(data.password, data.confirmPassword, token).then(response => {\n      setResponse(response);\n    });\n  };\n\n  if (response === 200) {\n    console.log(\"appost\");\n  }\n\n  if (response === 401) {\n    console.log(\"fuk\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"password\",\n    placeholder: \"password\",\n    ref: register({\n      required: \"You must specify a password\",\n      minLength: {\n        value: 8,\n        message: \"Password must have at least 8 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    placeholder: \"confirmPassword\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: \"required\",\n      validate: value => value === passwordWatched.current || \"The password do not match\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 40\n    }\n  }, errors.confirmPassword.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/component/formForgotPassword/FormForgotPassword.js"],"names":["React","useRef","useState","useForm","useParams","AuthService","ForgotPassword","register","errors","handleSubmit","watch","response","setResponse","passwordWatched","current","token","onSubmit","data","forgotPassword","password","confirmPassword","then","console","log","required","minLength","value","message","validate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAuBC,QAAvB,QAAuC,OAAvC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAEzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAA4CP,OAAO,CAAC,EAAD,CAAzD;AACA,QAAM,CAACQ,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,EAAvC;AACA,QAAMW,eAAe,GAAGZ,MAAM,CAAC,EAAD,CAA9B;AACAY,EAAAA,eAAe,CAACC,OAAhB,GAA0BJ,KAAK,CAAC,UAAD,EAAa,EAAb,CAA/B;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAYX,SAAS,EAA3B;;AAEA,QAAMY,QAAQ,GAAGC,IAAI,IAAI;AACrBZ,IAAAA,WAAW,CAACa,cAAZ,CAA2BD,IAAI,CAACE,QAAhC,EAA0CF,IAAI,CAACG,eAA/C,EAAgEL,KAAhE,EAAuEM,IAAvE,CACKV,QAAD,IAAc;AACVC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAHL;AAIH,GALD;;AAOA,MAAGA,QAAQ,KAAG,GAAd,EAAmB;AACfW,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AACD,MAAGZ,QAAQ,KAAG,GAAd,EAAkB;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAEd,YAAY,CAACO,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,GAAG,EAAET,QAAQ,CAAC;AACViB,MAAAA,QAAQ,EAAE,6BADA;AAEVC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFD,KAAD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcKnB,MAAM,CAACW,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,MAAM,CAACW,QAAP,CAAgBQ,OAApB,CAdxB,eAeI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,iBAJT;AAKI,IAAA,GAAG,EAAEpB,QAAQ,CAAC;AACViB,MAAAA,QAAQ,EAAE,UADA;AAEVI,MAAAA,QAAQ,EAAEF,KAAK,IACXA,KAAK,KAAKb,eAAe,CAACC,OAA1B,IAAqC;AAH/B,KAAD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EA0BKN,MAAM,CAACY,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,MAAM,CAACY,eAAP,CAAuBO,OAA3B,CA1B/B,eA2BI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CADJ;AAmCH,CA1DD;;AA4DA,eAAerB,cAAf","sourcesContent":["import React, { useRef,useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from \"react-router-dom\";\r\nimport AuthService from '../../service/auth.service';\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const { register, errors, handleSubmit, watch } = useForm({});\r\n    const [response,setResponse] = useState();\r\n    const passwordWatched = useRef({});\r\n    passwordWatched.current = watch(\"password\", \"\")\r\n    \r\n    const { token } = useParams();\r\n\r\n    const onSubmit = data => {\r\n        AuthService.forgotPassword(data.password, data.confirmPassword, token).then(\r\n            (response) => {\r\n                setResponse(response)\r\n            });\r\n    };\r\n\r\n    if(response===200) {\r\n        console.log(\"appost\")\r\n    }\r\n    if(response===401){\r\n        console.log(\"fuk\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                ref={register({\r\n                    required: \"You must specify a password\",\r\n                    minLength: {\r\n                        value: 8,\r\n                        message: \"Password must have at least 8 characters\"\r\n                    }\r\n                })}\r\n            />\r\n            {errors.password && <p>{errors.password.message}</p>}\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                ref={register({\r\n                    required: \"required\",\r\n                    validate: value =>\r\n                        value === passwordWatched.current || \"The password do not match\"\r\n                })}\r\n            />\r\n            {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n            <input\r\n                type=\"submit\"\r\n                className=\"form-control\"\r\n            />\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}