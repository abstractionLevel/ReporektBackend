{"ast":null,"code":"import axios from \"axios\";\nconst API_URL_SIGNIN = \"http://192.168.1.235:8080/api/v1/authentication\";\nconst API_URL_SIGNUP = \"http://192.168.1.235:8080/api/v1/registration\";\nconst API_URL_REPORT = \"http://localhost:8080/api/v1/reports\";\nconst API_URL_UPDATE_PASSWORD = \"http://localhost:8080/api/v1/users/1/account/update_password\";\nconst token = localStorage.getItem(\"userToken\");\nconst headers = {\n  headers: {\n    \"Bearer\": token\n  }\n};\nconst region = localStorage.getItem(\"userRegion\");\n\nconst updatePassword = (oldPassword, password, confirmPassword) => {\n  console.log(token);\n  return axios.post(\"http://localhost:8080/api/v1/users/account/update_password\", {\n    oldPassword,\n    password,\n    confirmPassword\n  }, headers).then(response => {\n    return response;\n  });\n};\n\nconst register = (username, email, password, confirmPassword) => {\n  return axios.post(API_URL_SIGNUP, {\n    username,\n    email,\n    password,\n    confirmPassword,\n    region\n  });\n};\n\nconst report = (nickname, reportType, description) => {\n  return axios.post(API_URL_REPORT, {\n    nickname,\n    reportType,\n    description\n  }, {\n    headers: {\n      \"Bearer\": token\n    }\n  }).then(response => {\n    return response;\n  });\n};\n\nconst login = (username, password) => {\n  return axios.post(API_URL_SIGNIN, {\n    username,\n    password\n  }).then(response => {\n    if (response.data) {\n      localStorage.setItem(\"userToken\", response.data[0]);\n      localStorage.setItem(\"userRegion\", response.data[1]);\n      return response;\n    }\n  });\n};\n\nconst verifyUserExists = username => {\n  const url = \"http://192.168.1.235:8080/api/v1/users/username/\" + username;\n  return axios.get(url).then(response => {\n    return response;\n  }).catch(error => {});\n};\n\nconst verifyEmailExists = email => {\n  const url = \"http://192.168.1.235:8080/api/v1/users/\" + email;\n  return axios.get(url).then(response => {\n    return response;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"userToken\");\n};\n\nconst getCurrentUser = () => {\n  return localStorage.getItem(\"userToken\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  verifyUserExists,\n  verifyEmailExists,\n  report,\n  updatePassword\n};","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/service/auth.service.js"],"names":["axios","API_URL_SIGNIN","API_URL_SIGNUP","API_URL_REPORT","API_URL_UPDATE_PASSWORD","token","localStorage","getItem","headers","region","updatePassword","oldPassword","password","confirmPassword","console","log","post","then","response","register","username","email","report","nickname","reportType","description","login","data","setItem","verifyUserExists","url","get","catch","error","verifyEmailExists","logout","removeItem","getCurrentUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL_SIGNIN = \"http://192.168.1.235:8080/api/v1/authentication\";\r\nconst API_URL_SIGNUP = \"http://192.168.1.235:8080/api/v1/registration\";\r\nconst API_URL_REPORT = \"http://localhost:8080/api/v1/reports\";\r\nconst API_URL_UPDATE_PASSWORD = \"http://localhost:8080/api/v1/users/1/account/update_password\";\r\n\r\n\r\nconst token = localStorage.getItem(\"userToken\");\r\nconst headers = {headers: {\"Bearer\": token }};\r\nconst region = localStorage.getItem(\"userRegion\")\r\n\r\nconst updatePassword = (oldPassword,password,confirmPassword) => {\r\n    console.log(token)\r\n    return axios.post(\"http://localhost:8080/api/v1/users/account/update_password\", {\r\n        oldPassword,password,confirmPassword\r\n    },headers)\r\n    .then((response)=> {\r\n        return response\r\n    })\r\n};\r\n\r\nconst register = (username, email, password, confirmPassword) => {\r\n    return axios.post(API_URL_SIGNUP, {\r\n        username,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        region,\r\n    });\r\n};\r\n\r\nconst report = (nickname,reportType,description) => {\r\n    return axios.post(API_URL_REPORT, {\r\n        nickname,reportType,description},{headers: {\"Bearer\": token }\r\n    })\r\n    .then((response)=>{\r\n        return response;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(API_URL_SIGNIN, {\r\n            username,\r\n            password,\r\n        })\r\n        .then((response) => {\r\n            \r\n            if (response.data) {\r\n                localStorage.setItem(\"userToken\", response.data[0]);\r\n                localStorage.setItem(\"userRegion\", response.data[1]);\r\n                return response;\r\n            }\r\n            \r\n        });\r\n};\r\n\r\nconst verifyUserExists = (username) => {\r\n    const url = \"http://192.168.1.235:8080/api/v1/users/username/\"+username;\r\n    return axios.get(url).then(\r\n        (response) => { \r\n            return response\r\n        })\r\n        .catch(error => {\r\n        });\r\n};\r\n\r\nconst verifyEmailExists = (email) => {\r\n    const url = \"http://192.168.1.235:8080/api/v1/users/\"+email;\r\n    return axios.get(url).then(\r\n        (response) => {\r\n            return response\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"userToken\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return localStorage.getItem(\"userToken\");\r\n};\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    verifyUserExists,\r\n    verifyEmailExists,\r\n    report,\r\n    updatePassword,\r\n};"]},"metadata":{},"sourceType":"module"}