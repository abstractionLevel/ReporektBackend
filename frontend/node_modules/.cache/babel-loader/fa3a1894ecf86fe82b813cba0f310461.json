{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\pages\\\\Register\\\\Register.js\";\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport { isEmail } from \"validator\";\nimport { Col, Container, Row } from 'react-bootstrap'; //service\n\nimport AuthService from '../../service/auth.service';\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"This is not a valid email.\");\n  }\n};\n\nconst validEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"This is not a valid email.\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 16) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"The username must be between 3 and 16 characters.\");\n  }\n};\n\nconst vregion = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Please Select the region\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nconst Register = props => {\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const regions = [\"euw\", \"na\", \"korea\", \"japan\"];\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeConfirmPassword = e => {\n    const confirmPassword = e.target.value;\n    setConfirmPassword(confirmPassword);\n  };\n\n  const vConfirmPassword = () => {\n    if (confirmPassword != password) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"The passwords do not match\");\n    }\n  };\n\n  const handlerRegister = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.message || error.message || error.toString();\n        setMessage(resMessage);\n        setSuccessful(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg-4 form-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handlerRegister,\n    ref: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, !successful && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"username\",\n    placeholder: \"username\",\n    value: username,\n    onChange: onChangeUsername,\n    validations: [required, vusername],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    validations: [required, validEmail],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    validations: [required, vpassword],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"confirmPassword\",\n    placeholder: \"confirm password\",\n    value: confirmPassword,\n    onChange: onChangeConfirmPassword,\n    validations: [required, vConfirmPassword],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"Region\",\n    className: \"form-control mb-2\",\n    value: \"\",\n    validations: [vregion],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, \"Select Region\"), regions.map((region, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 69\n    }\n  }, region))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, \"Sign Up\")), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, message), /*#__PURE__*/React.createElement(CheckButton, {\n    style: {\n      display: \"none\"\n    },\n    ref: checkBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lassName: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/pages/Register/Register.js"],"names":["React","useState","useRef","Form","Input","CheckButton","Select","isEmail","Col","Container","Row","AuthService","required","value","validEmail","vusername","length","vregion","vpassword","Register","props","form","checkBtn","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","successful","setSuccessful","message","setMessage","regions","onChangeUsername","e","target","onChangeEmail","onChangePassword","onChangeConfirmPassword","vConfirmPassword","handlerRegister","preventDefault","current","validateAll","context","_errors","register","then","response","data","error","resMessage","toString","map","region","index","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Select from \"react-validation/build/select\";\r\n\r\nimport { isEmail } from \"validator\";\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\n//service\r\nimport AuthService from '../../service/auth.service';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = (value) => {\r\n    if (value.length < 3 || value.length > 16) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 16 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vregion = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Please Select the region\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const regions = [\"euw\", \"na\", \"korea\", \"japan\"];\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username)\r\n    };\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email)\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password)\r\n    };\r\n\r\n    const onChangeConfirmPassword = (e) => {\r\n        const confirmPassword = e.target.value;\r\n        setConfirmPassword(confirmPassword)\r\n    };\r\n\r\n    const vConfirmPassword = () => {\r\n        if (confirmPassword != password) {\r\n            return (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    The passwords do not match\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    \r\n\r\n\r\n    const handlerRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.register(username, email, password).then(\r\n                (response) => {\r\n                    setMessage(response.data.message);\r\n                    setSuccessful(true)\r\n                },\r\n                (error) => {\r\n                    const resMessage = (error.response && error.response.data && error.response.message) ||\r\n                        error.message || error.toString();\r\n\r\n                    setMessage(resMessage);\r\n                    setSuccessful(false);\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col className='col-lg-4'>\r\n                </Col>\r\n                <Col className=\"col-lg-4 form-login\">\r\n                    <Form onSubmit={handlerRegister} ref={form}>\r\n                        {!successful && (\r\n                            <div>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mb-2\"\r\n                                    name=\"username\"\r\n                                    placeholder=\"username\"\r\n                                    value={username}\r\n                                    onChange={onChangeUsername}\r\n                                    validations={[required, vusername]}\r\n                                />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mb-2\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"email\"\r\n                                    value={email}\r\n                                    onChange={onChangeEmail}\r\n                                    validations={[required, validEmail]}\r\n                                />\r\n\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mb-2\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"password\"\r\n                                    value={password}\r\n                                    onChange={onChangePassword}\r\n                                    validations={[required, vpassword]}\r\n                                />\r\n\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mb-2\"\r\n                                    name=\"confirmPassword\"\r\n                                    placeholder=\"confirm password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={onChangeConfirmPassword}\r\n                                    validations={[required, vConfirmPassword]}\r\n                                />\r\n                                <Select name='Region' className=\"form-control mb-2\" value='' validations={[vregion]}>\r\n                                    <option value=''>Select Region</option>\r\n                                    {regions.map((region, index) => <option value={index}>{region}</option>)}\r\n                                </Select>\r\n\r\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                            </div>\r\n                        )}\r\n                        {message && (\r\n                            <div\r\n                                className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\r\n                                role=\"alert\"\r\n                            >\r\n                                {message}\r\n                            </div>\r\n                        )}\r\n                        <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                    </Form>\r\n                </Col>\r\n                <Col lassName='col-lg-4'>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}