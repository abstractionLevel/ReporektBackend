{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\reportType\\\\ListReportsTypeOfRegion.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchReportsTypeByPlayerNickname } from '../../redux/reportType/actions';\nimport { ListGroup } from 'react-bootstrap';\n\nconst ListReportsTypeOfRegion = () => {\n  const dispatch = useDispatch();\n  const reportsType = useSelector(state => state.reportType.reportsTypeOfPlayer);\n  const username = props.username;\n  useEffect(() => {\n    dispatch(fetchReportsTypeByPlayerNickname(username));\n  }, [dispatch, username]);\n  const data = [['Task', 'Hours per Day']];\n  reportsType.map(repType => {\n    return data.push([repType.reportType, repType.count]);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-latest-players\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, reportType.map((repType, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"mb-2 list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, repType.reportType)))));\n};\n\nexport default ListReportsTypeOfRegion;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/reportType/ListReportsTypeOfRegion.js"],"names":["React","useEffect","useDispatch","useSelector","fetchReportsTypeByPlayerNickname","ListGroup","ListReportsTypeOfRegion","dispatch","reportsType","state","reportType","reportsTypeOfPlayer","username","props","data","map","repType","push","count","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,gCAAR,QAA+C,gCAA/C;AACA,SAAQC,SAAR,QAAyB,iBAAzB;;AAIA,MAAMC,uBAAuB,GAAG,MAAM;AAElC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,mBAA3B,CAA/B;AACA,QAAMC,QAAQ,GAAGC,KAAK,CAACD,QAAvB;AAEAX,EAAAA,SAAS,CAAE,MAAK;AACZM,IAAAA,QAAQ,CAACH,gCAAgC,CAACQ,QAAD,CAAjC,CAAR;AACH,GAFQ,EAEP,CAACL,QAAD,EAAUK,QAAV,CAFO,CAAT;AAIA,QAAME,IAAI,GAAG,CAAC,CAAC,MAAD,EAAS,eAAT,CAAD,CAAb;AAGAN,EAAAA,WAAW,CAACO,GAAZ,CAAgBC,OAAO,IAAI;AAC7B,WAAOF,IAAI,CAACG,IAAL,CAAU,CAACD,OAAO,CAACN,UAAT,EAAoBM,OAAO,CAACE,KAA5B,CAAV,CAAP;AAEA,GAHE;AAKA,sBACI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,UAAU,CAACK,GAAX,CAAe,CAACC,OAAD,EAAUG,KAAV,kBACZ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,GAAG,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OAAO,CAACN,UADb,CADR,CADH,CADL,CADJ,CADJ;AAaH,CA/BD;;AAiCA,eAAeJ,uBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchReportsTypeByPlayerNickname} from '../../redux/reportType/actions';\r\nimport {ListGroup}  from 'react-bootstrap';\r\n\r\n\r\n\r\nconst ListReportsTypeOfRegion = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const reportsType = useSelector(state => state.reportType.reportsTypeOfPlayer)\r\n    const username = props.username;\r\n\r\n    useEffect( ()=> {\r\n        dispatch(fetchReportsTypeByPlayerNickname(username))\r\n    },[dispatch,username])\r\n\r\n    const data = [['Task', 'Hours per Day']]\r\n\r\n\r\n    reportsType.map(repType => {\r\n\t\treturn data.push([repType.reportType,repType.count])\r\n\t\t\r\n\t});\r\n\r\n    return (\r\n        < div className='list-latest-players' >\r\n            <ListGroup>\r\n                {reportType.map((repType, index) =>\r\n                    <div key={index} className='mb-2 list'>\r\n                            <ListGroup.Item key='index'>\r\n                                {repType.reportType}\r\n                            </ListGroup.Item>\r\n                    </div>\r\n                )}\r\n            </ListGroup>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default ListReportsTypeOfRegion;"]},"metadata":{},"sourceType":"module"}