{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\pages\\\\Register\\\\Register.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Col, Container, Row } from 'react-bootstrap'; //service\n\nimport AuthService from '../../service/auth.service'; //scss\n\nimport './Register.scss';\n\nconst vregion = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"Please Select the region\");\n  }\n};\n\nconst Register = props => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch\n  } = useForm({});\n  const passwordWatched = useRef({});\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [usernameAlreadyExist, setUsernameAlreadyExist] = useState();\n  const [emailAlreadyExists, setEmailAlreadyExists] = useState();\n  const [d, setD] = useState();\n  passwordWatched.current = watch(\"password\", \"\");\n  useEffect(() => {\n    if (d) {\n      setUsernameAlreadyExist(true);\n    }\n  }, [d]);\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangeConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onChangeRegion = e => {\n    setRegion(e.target.value);\n  };\n\n  const onSubmit = async data => {\n    AuthService.verifyUserExists(username).then(response => {\n      setD(true);\n    });\n    AuthService.verifyEmailExists(email).then(response => {\n      if (response.status == 200) {\n        setEmailAlreadyExists(true);\n      } else {\n        setEmailAlreadyExists(false);\n      }\n    });\n    console.log(usernameAlreadyExist);\n\n    if (usernameAlreadyExist === false) {\n      AuthService.register(username, email, password, confirmPassword, region).then(response => {\n        props.history.push({\n          pathname: '/message',\n          state: {\n            successful: true,\n            message: \"A verification link has been sent your email: \" + email\n          }\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        props.history.push({\n          pathname: '/message',\n          state: {\n            successful: false,\n            message: resMessage\n          }\n        });\n      });\n    }\n  };\n\n  const regions = [\"euw\", \"na\", \"korea\", \"japan\"];\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg-4 form-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    value: username,\n    onChange: onChangeUsername,\n    className: \"form-control mb-2 \",\n    type: \"text\",\n    placeholder: \"username\",\n    ref: register({\n      required: \"You must specify a username\",\n      minLength: {\n        value: 8,\n        message: \"username must have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }, errors.username.message), usernameAlreadyExist && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 50\n    }\n  }, \"Username Already Exists\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    className: \"form-control mb-2 \",\n    type: \"text\",\n    placeholder: \"email\",\n    ref: register({\n      required: \"required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 42\n    }\n  }, errors.email.message), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    onChange: onChangePassword,\n    className: \"form-control mb-2 \",\n    type: \"text\",\n    placeholder: \"password\",\n    ref: register({\n      required: \"You must specify a password\",\n      minLength: {\n        value: 8,\n        message: \"Password must have at least 8 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 45\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: onChangeConfirmPassword,\n    className: \"form-control mb-2\",\n    placeholder: \"confirm password\",\n    type: \"text\",\n    ref: register({\n      validate: value => value === passwordWatched.current || \"The passwords do not match\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 52\n    }\n  }, errors.confirmPassword.message), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"region\",\n    value: region,\n    onChange: onChangeRegion,\n    className: \"form-control mb-2\",\n    ref: register({\n      required: \"select one option\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Select a region\"), regions.map((region, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: region,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, region))), errors.region && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 43\n    }\n  }, errors.region.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"form-control \",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lassName: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/pages/Register/Register.js"],"names":["React","useState","useRef","useEffect","useForm","Col","Container","Row","AuthService","vregion","value","Register","props","register","errors","handleSubmit","watch","passwordWatched","username","setUsername","password","setPassword","region","setRegion","email","setEmail","confirmPassword","setConfirmPassword","usernameAlreadyExist","setUsernameAlreadyExist","emailAlreadyExists","setEmailAlreadyExists","d","setD","current","onChangeUsername","e","target","onChangePassword","onChangeEmail","onChangeConfirmPassword","onChangeRegion","onSubmit","data","verifyUserExists","then","response","verifyEmailExists","status","console","log","history","push","pathname","state","successful","message","error","resMessage","toString","regions","preventDefault","required","minLength","pattern","validate","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef,useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\n//service\r\nimport AuthService from '../../service/auth.service';\r\n\r\n//scss\r\nimport './Register.scss';\r\n\r\nconst vregion = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Please Select the region\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const { register, errors, handleSubmit, watch } = useForm({});\r\n\r\n    const passwordWatched = useRef({});\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [region, setRegion] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [usernameAlreadyExist,setUsernameAlreadyExist] = useState();\r\n    const [emailAlreadyExists,setEmailAlreadyExists] = useState();\r\n    const [d,setD] = useState();\r\n\r\n    passwordWatched.current = watch(\"password\", \"\")\r\n\r\n    useEffect(() => {\r\n        if (d) {\r\n          setUsernameAlreadyExist(true)\r\n        }\r\n      }, [d])\r\n\r\n    const onChangeUsername = (e) => {\r\n        setUsername(e.target.value)\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    };\r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    };\r\n\r\n    const onChangeConfirmPassword = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    };\r\n\r\n    const onChangeRegion = (e) => {\r\n        setRegion(e.target.value)\r\n    };\r\n\r\n\r\n    const onSubmit = async data => {\r\n\r\n        AuthService.verifyUserExists(username).then(\r\n            (response) => {\r\n                setD(true)\r\n            });\r\n        \r\n        AuthService.verifyEmailExists(email).then(\r\n            (response) => {\r\n                if(response.status == 200) {\r\n                    setEmailAlreadyExists(true)\r\n                }\r\n                else {\r\n                    setEmailAlreadyExists(false)\r\n                }\r\n        });\r\n\r\n        console.log(usernameAlreadyExist)\r\n\r\n        if(usernameAlreadyExist===false) {\r\n            AuthService.register(username, email, password, confirmPassword, region).then(\r\n                (response) => {\r\n                    props.history.push({\r\n                        pathname : '/message',\r\n                        state :{\r\n                            successful: true,\r\n                            message : \"A verification link has been sent your email: \" + email\r\n                        }\r\n                    });\r\n                },\r\n                (error) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    \r\n                    props.history.push({\r\n                        pathname : '/message',\r\n                        state :{\r\n                            successful: false,\r\n                            message : resMessage\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        }\r\n       \r\n    };\r\n\r\n\r\n    const regions = [\"euw\", \"na\", \"korea\", \"japan\"];\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col className='col-lg-4'>\r\n                </Col>\r\n                <Col className=\"col-lg-4 form-login\">\r\n                    <form onSubmit={e => e.preventDefault()}>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            className=\"form-control mb-2 \"\r\n                            type=\"text\"\r\n                            placeholder=\"username\"\r\n                            ref={register({\r\n                                required: \"You must specify a username\",\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"username must have at least 6 characters\"\r\n                                }\r\n                            })}\r\n                        />\r\n\r\n                        {errors.username && <p>{errors.username.message}</p>}\r\n                        {usernameAlreadyExist && <p>Username Already Exists</p>}\r\n\r\n\r\n                        <input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={onChangeEmail}\r\n                            className=\"form-control mb-2 \"\r\n                            type=\"text\"\r\n                            placeholder=\"email\"\r\n                            ref={register({\r\n                                required: \"required\",\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"invalid email address\"\r\n                                }\r\n                            })}\r\n                        />\r\n\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n\r\n                        <input\r\n                            name=\"password\"\r\n                            onChange={onChangePassword}\r\n                            className=\"form-control mb-2 \"\r\n                            type=\"text\"\r\n                            placeholder=\"password\"\r\n                            ref={register({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"Password must have at least 8 characters\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n\r\n                        <input\r\n                            name=\"confirmPassword\"\r\n                            value={confirmPassword}\r\n                            onChange={onChangeConfirmPassword}\r\n                            className=\"form-control mb-2\"\r\n                            placeholder=\"confirm password\"\r\n                            type=\"text\"\r\n                            ref={register({\r\n                                validate: value =>\r\n                                    value === passwordWatched.current || \"The passwords do not match\"\r\n                            })}\r\n                        />\r\n\r\n                        {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n\r\n                        <select name=\"region\"\r\n                            value={region}\r\n                            onChange={onChangeRegion}\r\n                            className=\"form-control mb-2\"\r\n                            ref={register({\r\n                                required: \"select one option\"\r\n                            })}>\r\n                            <option value=\"\">Select a region</option>\r\n                            {regions.map((region, index) =>\r\n                                <option value={region}>{region}</option>\r\n                            )}\r\n                        </select>\r\n\r\n                        {errors.region && <p>{errors.region.message}</p>}\r\n\r\n                        <input type=\"submit\" className=\"form-control \" onClick={handleSubmit(onSubmit)} />\r\n                    </form>\r\n                </Col>\r\n                <Col lassName='col-lg-4'>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}