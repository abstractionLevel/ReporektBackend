{"ast":null,"code":"import axios from\"axios\";import Cookies from'js-cookie';import authHeader from'../service/auth-header';var API_URL_SIGNIN=\"/api/v1/authentication/\";var API_URL_SIGNUP=\"/api/v1/registration/\";var API_URL_FORGOT_PASSWORD=\"/api/v1/users/accounts/update_forgot_password\";var API_URL_SEND_EMAIL_FORGOT_PASSWORD=\"/api/v1/users/accounts/email/email_token\";var API_URL_UPDATE_PASSWORD=\"/api/v1/users/accounts/update_password\";var API_URL_VERIFY_USER_EXISTS=\"/api/v1/users/username/\";var API_URL_VERIFY_EMAIL_EXISTS=\"/api/v1/users/\";var headers=authHeader();var region=localStorage.getItem(\"userRegion\");var forgotPassword=function forgotPassword(password,confirmPassword,token){return axios.post(API_URL_FORGOT_PASSWORD,{password:password,confirmPassword:confirmPassword,token:token}).then(function(response){return response.status;}).catch(function(error){return error.response.status;});};var updatePassword=function updatePassword(oldPassword,password,confirmPassword){return axios.post(API_URL_UPDATE_PASSWORD,{oldPassword:oldPassword,password:password,confirmPassword:confirmPassword},headers).then(function(response){return response.status;});};var sendEmailForgotPassword=function sendEmailForgotPassword(email){return axios.post(API_URL_SEND_EMAIL_FORGOT_PASSWORD,{email:email}).then(function(response){return response.status;}).catch(function(error){console.log(error);});};var register=function register(username,email,password,confirmPassword){return axios.post(API_URL_SIGNUP,{username:username,email:email,password:password,confirmPassword:confirmPassword,region:region});};var login=function login(username,password){return axios.post(API_URL_SIGNIN,{username:username,password:password}).then(function(response){if(response.data){localStorage.setItem(\"userToken\",response.data);setCurrentUser(response.data);return response;}});};var verifyUserExists=function verifyUserExists(username){return axios.get(API_URL_VERIFY_USER_EXISTS+username).then(function(response){return response;}).catch(function(error){});};var verifyEmailExists=function verifyEmailExists(email){return axios.get(API_URL_VERIFY_EMAIL_EXISTS+email).then(function(response){return response;}).catch(function(error){});};var logout=function logout(){Cookies.remove(\"wtu\");};var getCurrentUser=function getCurrentUser(){return Cookies.get(\"wtu\");};var setCurrentUser=function setCurrentUser(jwt){return Cookies.set('wtu',jwt,{expires:7});};export default{register:register,login:login,logout:logout,getCurrentUser:getCurrentUser,verifyUserExists:verifyUserExists,verifyEmailExists:verifyEmailExists,updatePassword:updatePassword,sendEmailForgotPassword:sendEmailForgotPassword,forgotPassword:forgotPassword};","map":{"version":3,"sources":["C:/Users/kartu/Desktop/ReportPlayer/frontend/src/service/auth.service.js"],"names":["axios","Cookies","authHeader","API_URL_SIGNIN","API_URL_SIGNUP","API_URL_FORGOT_PASSWORD","API_URL_SEND_EMAIL_FORGOT_PASSWORD","API_URL_UPDATE_PASSWORD","API_URL_VERIFY_USER_EXISTS","API_URL_VERIFY_EMAIL_EXISTS","headers","region","localStorage","getItem","forgotPassword","password","confirmPassword","token","post","then","response","status","catch","error","updatePassword","oldPassword","sendEmailForgotPassword","email","console","log","register","username","login","data","setItem","setCurrentUser","verifyUserExists","get","verifyEmailExists","logout","remove","getCurrentUser","jwt","set","expires"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport authHeader from '../service/auth-header';\r\n\r\n\r\nconst API_URL_SIGNIN = \"/api/v1/authentication/\";\r\nconst API_URL_SIGNUP = \"/api/v1/registration/\";\r\nconst API_URL_FORGOT_PASSWORD = \"/api/v1/users/accounts/update_forgot_password\"\r\nconst API_URL_SEND_EMAIL_FORGOT_PASSWORD = \"/api/v1/users/accounts/email/email_token\";\r\nconst API_URL_UPDATE_PASSWORD = \"/api/v1/users/accounts/update_password\";\r\nconst API_URL_VERIFY_USER_EXISTS = \"/api/v1/users/username/\";\r\nconst API_URL_VERIFY_EMAIL_EXISTS = \"/api/v1/users/\";\r\n\r\n\r\n\r\nconst headers =   authHeader() ;\r\nconst region = localStorage.getItem(\"userRegion\")\r\n\r\n\r\nconst forgotPassword = (password,confirmPassword,token) => {\r\n    return axios.post(API_URL_FORGOT_PASSWORD,{password,confirmPassword,token}).then(\r\n        (response) => {\r\n            return response.status;\r\n        })\r\n        .catch((error)=>{\r\n            return error.response.status;\r\n        });\r\n};\r\n\r\nconst updatePassword = (oldPassword, password, confirmPassword) => {\r\n    return axios.post(API_URL_UPDATE_PASSWORD, {\r\n        oldPassword, password, confirmPassword\r\n    }, headers)\r\n        .then((response) => {\r\n            return response.status\r\n        })\r\n};\r\n\r\nconst sendEmailForgotPassword = (email) => {\r\n    return axios.post(API_URL_SEND_EMAIL_FORGOT_PASSWORD, { email }).then(\r\n        (response) => {\r\n            return response.status\r\n        })\r\n        .catch(\r\n            (error) => {\r\n                console.log(error)\r\n            });\r\n};\r\n\r\nconst register = (username, email, password, confirmPassword) => {\r\n    return axios.post(API_URL_SIGNUP, {\r\n        username,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        region,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(API_URL_SIGNIN, {\r\n            username,\r\n            password,\r\n        })\r\n        .then((response) => {\r\n\r\n            if (response.data) {\r\n                localStorage.setItem(\"userToken\", response.data);\r\n                setCurrentUser(response.data)\r\n                return response;\r\n            }\r\n\r\n        });\r\n};\r\n\r\nconst verifyUserExists = (username) => {\r\n    return axios.get(API_URL_VERIFY_USER_EXISTS+username).then(\r\n        (response) => {\r\n            return response\r\n        })\r\n        .catch(error => {\r\n        });\r\n};\r\n\r\nconst verifyEmailExists = (email) => {\r\n    return axios.get(API_URL_VERIFY_EMAIL_EXISTS+email).then(\r\n        (response) => {\r\n            return response\r\n        })\r\n        .catch(error => {\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    Cookies.remove(\"wtu\");\r\n};\r\n\r\n\r\nconst getCurrentUser = () => {\r\n    return Cookies.get(\"wtu\");\r\n};\r\n\r\nconst setCurrentUser = (jwt) => {\r\n    return Cookies.set('wtu',jwt,{expires:7});\r\n}\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    verifyUserExists,\r\n    verifyEmailExists,\r\n    updatePassword,\r\n    sendEmailForgotPassword,\r\n    forgotPassword,\r\n};"]},"metadata":{},"sourceType":"module"}