{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\LeagueOfReport-frontend\\\\src\\\\component\\\\formForgotPassword\\\\FormForgotPassword.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useParams } from \"react-router-dom\";\nimport AuthService from '../../service/auth.service';\nimport { useHistory } from \"react-router\";\n\nconst ForgotPassword = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch\n  } = useForm({});\n  const [response, setResponse] = useState();\n  const [message, setMessage] = useState(\"\");\n  const passwordWatched = useRef({});\n  passwordWatched.current = watch(\"password\", \"\");\n  const {\n    token\n  } = useParams();\n  let history = useHistory();\n\n  const onSubmit = data => {\n    AuthService.forgotPassword(data.password, data.confirmPassword, token).then(response => {\n      setResponse(response);\n    });\n  };\n\n  useEffect(() => {\n    if (response === 200) {\n      setMessage(\"Password Update\");\n      setTimeout(() => {\n        history.push('/');\n      }, 2000);\n    }\n\n    if (response === 401) {\n      setMessage(\"Not Allowed\"); // window.location.reload();\n    }\n  }, [response]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    name: \"password\",\n    placeholder: \"password\",\n    ref: register({\n      required: \"You must specify a password\",\n      minLength: {\n        value: 8,\n        message: \"Password must have at least 8 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2\",\n    placeholder: \"confirmPassword\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: \"required\",\n      validate: value => value === passwordWatched.current || \"The password do not match\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }\n  }, errors.confirmPassword.message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"form-control mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), response === 200 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 34\n    }\n  }, message), response === 401 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 34\n    }\n  }, message));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/LeagueOfReport-frontend/src/component/formForgotPassword/FormForgotPassword.js"],"names":["React","useRef","useState","useEffect","useForm","useParams","AuthService","useHistory","ForgotPassword","register","errors","handleSubmit","watch","response","setResponse","message","setMessage","passwordWatched","current","token","history","onSubmit","data","forgotPassword","password","confirmPassword","then","setTimeout","push","required","minLength","value","validate"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from \"react-router-dom\";\r\nimport AuthService from '../../service/auth.service';\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const { register, errors, handleSubmit, watch } = useForm({});\r\n    const [response, setResponse] = useState();\r\n    const [message, setMessage] = useState(\"\")\r\n    const passwordWatched = useRef({});\r\n    passwordWatched.current = watch(\"password\", \"\")\r\n\r\n    const { token } = useParams();\r\n\r\n    let history = useHistory()\r\n\r\n    const onSubmit = data => {\r\n        AuthService.forgotPassword(data.password, data.confirmPassword, token).then(\r\n            (response) => {\r\n                setResponse(response)\r\n            });\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (response === 200) {\r\n            setMessage(\"Password Update\")\r\n            setTimeout(() => {\r\n                history.push('/');\r\n            }, 2000);\r\n        }\r\n        if (response === 401) {\r\n            setMessage(\"Not Allowed\")\r\n           // window.location.reload();\r\n\r\n        }\r\n    }, [response])\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                ref={register({\r\n                    required: \"You must specify a password\",\r\n                    minLength: {\r\n                        value: 8,\r\n                        message: \"Password must have at least 8 characters\"\r\n                    }\r\n                })}\r\n            />\r\n            {errors.password && <p>{errors.password.message}</p>}\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                ref={register({\r\n                    required: \"required\",\r\n                    validate: value =>\r\n                        value === passwordWatched.current || \"The password do not match\"\r\n                })}\r\n            />\r\n            {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n            <input\r\n                type=\"submit\"\r\n                className=\"form-control mb-1\"\r\n            />\r\n            {response === 200 && <div className=\"alert alert-success\">{message}</div>}\r\n            {response === 401 && <div className=\"alert alert-danger\">{message}</div>}\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}