{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\report\\\\CardReportsOfPlayer.js\";\nimport React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './CardReportsOfPlayer.scss';\nimport ReactPaginate from 'react-paginate';\nimport { Container } from 'react-bootstrap';\nimport ReportService from '../service/report.service';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nconst CardReportsOfPlayer = props => {\n  const token = localStorage.getItem(\"userToken\");\n  const username = props.username;\n  const [offset, setOffset] = useState(0);\n  const [perPage] = useState(4);\n  const [pageCount, setPageCount] = useState(0);\n  const [reports, setReports] = useState([]);\n\n  const getData = async () => {\n    const res = await ReportService.fetchReportByPlayerUsername(username);\n    const data = res.data;\n    const slice = data.slice(offset, offset + perPage);\n    const postData = slice.map((report, index) => /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 56\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-rep \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline report-type mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, report.reportType), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline float-right date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY/MM/DD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 64\n      }\n    }, report.date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline report-by \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"Reported By \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, report.user)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, report.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"br mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }))));\n    setReports(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage * perPage);\n  };\n\n  useEffect(() => {\n    getData();\n    var name = document.getElementsByClassName('next');\n    console.log(name.ad);\n  }, [offset]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, reports, /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageClick,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\",\n    showPaginationBottom: pageCount > 10 ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CardReportsOfPlayer;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/report/CardReportsOfPlayer.js"],"names":["React","useEffect","useState","Card","ReactPaginate","Container","ReportService","Moment","CardReportsOfPlayer","props","token","localStorage","getItem","username","offset","setOffset","perPage","pageCount","setPageCount","reports","setReports","getData","res","fetchReportByPlayerUsername","data","slice","postData","map","report","index","reportType","date","user","description","Math","ceil","length","handlePageClick","e","selectedPage","selected","name","document","getElementsByClassName","console","log","ad"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport './CardReportsOfPlayer.scss'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { Container } from 'react-bootstrap';\r\nimport ReportService from '../service/report.service';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nconst CardReportsOfPlayer = (props) => {\r\n\r\n\r\n    \r\n    const token = localStorage.getItem(\"userToken\");\r\n\r\n    const username = props.username;\r\n\r\n    const [offset, setOffset] = useState(0);\r\n    const [perPage] = useState(4);\r\n    const [pageCount, setPageCount] = useState(0)\r\n    const [reports,setReports] = useState([])\r\n\r\n\r\n\r\n\r\n    const getData = async() => {\r\n        const res = await ReportService.fetchReportByPlayerUsername(username)\r\n        const data = res.data;\r\n        const slice = data.slice(offset, offset + perPage)\r\n        const postData  = slice.map((report, index) => <Card key={index}>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Card.Link href=\"#\"></Card.Link>\r\n                </Card.Title>\r\n                <div className='info-rep '>\r\n                    <div className='d-inline report-type mr-1'>{report.reportType}</div>\r\n                    <div className='d-inline float-right date'><Moment format=\"YYYY/MM/DD\">{report.date}</Moment></div>\r\n                    <div className='d-inline report-by '>Reported By </div>\r\n                    <div className='d-inline user'>{report.user}</div>\r\n                </div>\r\n                <div className='line mb-3'>\r\n                </div>\r\n                <div className='report-text'>\r\n                    <p>{report.description}</p>\r\n                </div>\r\n                <div className='br mb-3'>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>)\r\n        setReports(postData)\r\n        setPageCount(Math.ceil(data.length / perPage))\r\n    };\r\n\r\n    const handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        setOffset(selectedPage *perPage)\r\n    };\r\n\r\n     useEffect(() => {\r\n        getData()\r\n        var name = document.getElementsByClassName('next');\r\n        console.log(name.ad)\r\n\r\n    }, [offset])\r\n\r\n    return (\r\n        <Container >\r\n            {reports}\r\n            <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={pageCount}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n                showPaginationBottom={pageCount > 10 ? true: false}\r\n\r\n\r\n\r\n                />\r\n        </Container>\r\n    )\r\n}\r\nexport default CardReportsOfPlayer"]},"metadata":{},"sourceType":"module"}