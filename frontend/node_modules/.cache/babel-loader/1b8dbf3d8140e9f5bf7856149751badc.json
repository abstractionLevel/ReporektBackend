{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\kartu\\\\Desktop\\\\ReportPlayer\\\\src\\\\main\\\\reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Chart}from\"react-google-charts\";import React,{useEffect,useState}from'react';import'./PieChartReportsTypeOfPlayer.scss';import ReportTypeService from'../../service/reportType.service';var PieChartReportsTypeOfPlayer=function PieChartReportsTypeOfPlayer(props){var username=props.username;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),reportsType=_useState2[0],setReportType=_useState2[1];useEffect(function(){ReportTypeService.fetchReportsTypeByPlayerNickname(username).then(function(response){setReportType(response);});},[]);var data=[['','']];reportsType.map(function(repType){return data.push([repType.reportType,repType.count]);});return/*#__PURE__*/React.createElement(\"div\",{className:\"pie-chart\"},/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{alignment:\"center\",legend:{position:'left',alignment:'center',orientation:'vertical'},chartArea:{left:0,top:0,width:\"100%\",height:\"80%\"},// Just add this option\npieHole:0.7,backgroundColor:'transparent',colors:['#40ff00','#ff0000','#ffffff','#FFA500','#DFFF00','#6495ED']},rootProps:{'data-testid':'1'}}));};export default PieChartReportsTypeOfPlayer;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/ReportPlayer/src/main/reactjs/src/component/PieChartReportsTypeOfPlayer/PieChartReportsTypeOfPlayer.js"],"names":["Chart","React","useEffect","useState","ReportTypeService","PieChartReportsTypeOfPlayer","props","username","reportsType","setReportType","fetchReportsTypeByPlayerNickname","then","response","data","map","repType","push","reportType","count","alignment","legend","position","orientation","chartArea","left","top","width","height","pieHole","backgroundColor","colors"],"mappings":"uLAAA,OAASA,KAAT,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,oCAAP,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CAEA,GAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACC,KAAD,CAAW,CAE3C,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAAvB,CAF2C,cAIPJ,QAAQ,CAAC,EAAD,CAJD,wCAIpCK,WAJoC,eAIxBC,aAJwB,eAQ3CP,SAAS,CAAE,UAAK,CACZE,iBAAiB,CAACM,gCAAlB,CAAmDH,QAAnD,EAA6DI,IAA7D,CACI,SAACC,QAAD,CAAc,CACVH,aAAa,CAACG,QAAD,CAAb,CACH,CAHL,EAKH,CANQ,CAMP,EANO,CAAT,CAQA,GAAMC,CAAAA,IAAI,CAAG,CAAC,CAAC,EAAD,CAAK,EAAL,CAAD,CAAb,CAEAL,WAAW,CAACM,GAAZ,CAAgB,SAAAC,OAAO,CAAI,CAC7B,MAAOF,CAAAA,IAAI,CAACG,IAAL,CAAU,CAACD,OAAO,CAACE,UAAT,CAAoBF,OAAO,CAACG,KAA5B,CAAV,CAAP,CAEG,CAHD,EAMA,mBACI,2BAAK,SAAS,CAAC,WAAf,eACA,oBAAC,KAAD,EACI,KAAK,CAAE,MADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UAHd,CAII,MAAM,cAAE,+CAJZ,CAKI,IAAI,CACAL,IANR,CAQI,OAAO,CAAE,CACLM,SAAS,CAAE,QADN,CAELC,MAAM,CAAE,CACJC,QAAQ,CAAE,MADN,CAEJF,SAAS,CAAE,QAFP,CAGJG,WAAW,CAAE,UAHT,CAFH,CAOPC,SAAS,CAAE,CACTC,IAAI,CAAE,CADG,CAETC,GAAG,CAAE,CAFI,CAGTC,KAAK,CAAE,MAHE,CAITC,MAAM,CAAE,KAJC,CAPJ,CAaL;AACAC,OAAO,CAAE,GAdJ,CAeLC,eAAe,CAAE,aAfZ,CAgBLC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA4C,SAA5C,CAAsD,SAAtD,CAhBH,CARb,CA0BI,SAAS,CAAE,CAAE,cAAe,GAAjB,CA1Bf,EADA,CADJ,CAiCH,CAzDD,CA2DA,cAAezB,CAAAA,2BAAf","sourcesContent":["import { Chart } from \"react-google-charts\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport './PieChartReportsTypeOfPlayer.scss';\r\nimport ReportTypeService from '../../service/reportType.service';\r\n\r\nconst PieChartReportsTypeOfPlayer = (props) => {\r\n\r\n    const username = props.username;\r\n\r\n    const [reportsType,setReportType] = useState([])\r\n\r\n\r\n\r\n    useEffect( ()=> {\r\n        ReportTypeService.fetchReportsTypeByPlayerNickname(username).then(\r\n            (response) => {\r\n                setReportType(response)\r\n            });\r\n           \r\n    },[])\r\n\r\n    const data = [['', '']]\r\n\r\n    reportsType.map(repType => {\r\n\t\treturn data.push([repType.reportType,repType.count])\r\n\t\t\r\n    });\r\n    \r\n\r\n    return (\r\n        <div className=\"pie-chart\">\r\n        <Chart\r\n            width={'100%'}\r\n            height={'400px'}\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={\r\n                data\r\n            }\r\n            options={{\r\n                alignment: \"center\",\r\n                legend: { \r\n                    position: 'left', \r\n                    alignment: 'center' ,\r\n                    orientation: 'vertical',\r\n              },\r\n              chartArea: {\r\n                left: 0,\r\n                top: 0,\r\n                width: \"100%\",\r\n                height: \"80%\"\r\n              },\r\n                // Just add this option\r\n                pieHole: 0.7,\r\n                backgroundColor: 'transparent',\r\n                colors: ['#40ff00', '#ff0000', '#ffffff', '#FFA500','#DFFF00','#6495ED']\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n        />\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChartReportsTypeOfPlayer;"]},"metadata":{},"sourceType":"module"}