{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kartu\\\\Desktop\\\\reactjs\\\\src\\\\report\\\\CardReportsOfPlayer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from 'react-bootstrap/Card'; //css\n\nimport './CardReportsOfPlayer.scss';\nimport ReactPaginate from 'react-paginate';\nimport { Container } from 'react-bootstrap';\nimport axios from 'axios';\nimport { fetchReportByPlayerId } from '../redux/report/actions';\n\nconst CardReportsOfPlayer = props => {\n  const token = localStorage.getItem(\"userToken\");\n  const username = props.username;\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(4);\n  const [pageCount, setPageCount] = useState(0);\n  const dispatch = useDispatch();\n  const reports = useSelector(state => state.reports.reportsOfPlayer);\n  useEffect(() => {\n    dispatch(fetchReportByPlayerId(username));\n    const slice = reports.slice(offset, offset + perPage);\n\n    const postData = slice => {\n      return slice.map((report, index) => /*#__PURE__*/React.createElement(Card, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-rep \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline report-type mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, report.reportType, \" in Ranked\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline float-right date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"2/8/2020 \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline report-by \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"Reported By \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Link, {\n        className: \"mr-1\",\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 52\n        }\n      }, \"Rolad\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, report.description)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"br mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }))));\n    };\n\n    setData(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  }, [dispatch, offset]);\n  console.log(data);\n\n  const getData = async () => {\n    const url = 'http://localhost:8080/api/v1/reports/players/' + username;\n    const res = await axios.get(url, {\n      headers: {\n        \"Bearer\": token\n      }\n    });\n    const data = res.data;\n    const slice = data.slice(offset, offset + perPage);\n    const postData = slice.map((report, index) => /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-rep \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline report-type mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, report.reportType, \" in Ranked\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline float-right date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"2/8/2020 \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline report-by \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Reported By \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Link, {\n      className: \"mr-1\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 52\n      }\n    }, \"Rolad\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, report.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"br mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }))));\n    setData(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, data, /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: \"prev\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: handlePageClick,\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CardReportsOfPlayer;","map":{"version":3,"sources":["C:/Users/kartu/Desktop/reactjs/src/report/CardReportsOfPlayer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Card","ReactPaginate","Container","axios","fetchReportByPlayerId","CardReportsOfPlayer","props","token","localStorage","getItem","username","offset","setOffset","data","setData","perPage","pageCount","setPageCount","dispatch","reports","state","reportsOfPlayer","slice","postData","map","report","index","reportType","description","Math","ceil","length","console","log","getData","url","res","get","headers","handlePageClick","e","selectedPage","selected"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Card from 'react-bootstrap/Card';\r\n//css\r\nimport './CardReportsOfPlayer.scss'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { Container } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport { fetchReportByPlayerId } from '../redux/report/actions';\r\n\r\nconst CardReportsOfPlayer = (props) => {\r\n\r\n\r\n    const token = localStorage.getItem(\"userToken\");\r\n\r\n    const username = props.username;\r\n\r\n    const [offset, setOffset] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    const [perPage] = useState(4);\r\n    const [pageCount, setPageCount] = useState(0)\r\n\r\n    const dispatch = useDispatch();\r\n    const reports = useSelector(state => state.reports.reportsOfPlayer);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchReportByPlayerId(username));\r\n        const slice = reports.slice(offset, offset + perPage)\r\n\r\n    const postData = (slice) => {\r\n        return slice.map((report, index) => <Card key={index}>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Card.Link href=\"#\"></Card.Link>\r\n                </Card.Title>\r\n                <div className='info-rep '>\r\n                    <div className='d-inline report-type mr-1'>{report.reportType} in Ranked</div>\r\n                    <div className='d-inline float-right date'>2/8/2020 </div>\r\n                    <div className='d-inline report-by '>Reported By </div>\r\n                    <div className='d-inline user'><Card.Link className='mr-1' href=\"#\">Rolad</Card.Link></div>\r\n                </div>\r\n                <div className='line mb-3'>\r\n                </div>\r\n                <div className='report-text'>\r\n                    <p>{report.description}</p>\r\n                </div>\r\n                <div className='br mb-3'>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>)\r\n    }\r\n    setData(postData)\r\n    setPageCount(Math.ceil(data.length / perPage))\r\n\r\n    }, [dispatch, offset])\r\n\r\n    console.log(data)\r\n\r\n    \r\n    const getData = async () => {\r\n\r\n        const url = 'http://localhost:8080/api/v1/reports/players/' + username;\r\n        const res = await axios.get(url, { headers: { \"Bearer\": token } })\r\n        const data = res.data;\r\n        const slice = data.slice(offset, offset + perPage)\r\n\r\n        const postData = slice.map((report, index) => <Card key={index}>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Card.Link href=\"#\"></Card.Link>\r\n                </Card.Title>\r\n                <div className='info-rep '>\r\n                    <div className='d-inline report-type mr-1'>{report.reportType} in Ranked</div>\r\n                    <div className='d-inline float-right date'>2/8/2020 </div>\r\n                    <div className='d-inline report-by '>Reported By </div>\r\n                    <div className='d-inline user'><Card.Link className='mr-1' href=\"#\">Rolad</Card.Link></div>\r\n                </div>\r\n                <div className='line mb-3'>\r\n                </div>\r\n                <div className='report-text'>\r\n                    <p>{report.description}</p>\r\n                </div>\r\n                <div className='br mb-3'>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>)\r\n        setData(postData)\r\n        setPageCount(Math.ceil(data.length / perPage))\r\n    }\r\n\r\n    const handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        setOffset(selectedPage)\r\n    };\r\n\r\n    return (\r\n        <Container >\r\n            {data}\r\n            <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={pageCount}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"} />\r\n        </Container>\r\n    )\r\n}\r\nexport default CardReportsOfPlayer"]},"metadata":{},"sourceType":"module"}